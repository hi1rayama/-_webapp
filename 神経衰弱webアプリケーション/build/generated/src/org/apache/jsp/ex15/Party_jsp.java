package org.apache.jsp.ex15;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Party_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final JspFactory _jspxFactory = JspFactory.getDefaultFactory();

  private static java.util.List<String> _jspx_dependants;

  private org.glassfish.jsp.api.ResourceInjector _jspx_resourceInjector;

  public java.util.List<String> getDependants() {
    return _jspx_dependants;
  }

  public void _jspService(HttpServletRequest request, HttpServletResponse response)
        throws java.io.IOException, ServletException {

    PageContext pageContext = null;
    HttpSession session = null;
    ServletContext application = null;
    ServletConfig config = null;
    JspWriter out = null;
    Object page = this;
    JspWriter _jspx_out = null;
    PageContext _jspx_page_context = null;

    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;
      _jspx_resourceInjector = (org.glassfish.jsp.api.ResourceInjector) application.getAttribute("com.sun.appserv.jsp.resource.injector");

      out.write("\n");
      out.write("<!DOCTYPE html>\n");

    request.setCharacterEncoding("UTF-8");
    String q1 = "";
    if(request.getParameter("q1")!=""){
           q1= request.getParameter("q1");
    }

    int j = 1;
    if (q1.equals("0")) {
        j = 0;
    }


      out.write("\n");
      out.write("<html lang=\"ja\">\n");
      out.write("    <link rel=\"stylesheet\" type=\"text/css\" href=\"style_1.css\" media=\"all\" />\n");
      out.write("    <head>\n");
      out.write("        <meta charset=\"utf-8\">\n");
      out.write("        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n");
      out.write("        <meta name=\"robots\" content=\"noindex\">\n");
      out.write("        <title>神経衰弱 パーティモード</title>\n");
      out.write("\n");
      out.write("        <script type=\"text/javascript\">\n");
      out.write("            // グローバル\n");
      out.write("// div要素を格納\n");
      out.write("            var cards = [];\n");
      out.write("// 開始時間\n");
      out.write("            var startTime;\n");
      out.write("\n");
      out.write("// カードめくり用 タイマーID\n");
      out.write("            var backTimer;\n");
      out.write("// 1枚目かどうかのフラグ   1枚目: true   2枚目: false\n");
      out.write("            var flgFirst = true;\n");
      out.write("//2枚目が一致してたらtrue 一致してなければfalse\n");
      out.write("            var flgPlayer = false;\n");
      out.write("// 1枚目のカードを格納\n");
      out.write("            var cardFirst;\n");
      out.write("// そろえた枚数\n");
      out.write("            var countUnit = 0;\n");
      out.write("\n");
      out.write("            var count = [0, 0, 0, 0];\n");
      out.write("// 数字格納 一時配列\n");
      out.write("            var qq = [];\n");
      out.write("            var arr = [];\n");
      out.write("\n");
      out.write("            window.onload = function () {\n");
      out.write("\n");
      out.write("\n");
      out.write("                for (var i = 1; i <= 52; i++) {\n");
      out.write("\n");
      out.write("                    arr.push(i);\n");
      out.write("                    qq.push(i);\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                // シャッフル\n");
      out.write("                shuffle(arr);\n");
      out.write("\n");
      out.write("                var panel = document.getElementById('panel');\n");
      out.write("\n");
      out.write("                // div要素作成\n");
      out.write("                for (i = 0; i < 52; i++) {\n");
      out.write("                    var div = document.createElement('div');\n");
      out.write("                    div.className = 'card back';\n");
      out.write("                    div.index = i;\n");
      out.write("                    div.id = i;\n");
      out.write("                    div.number = arr[i];\n");
      out.write("                    div.innerHTML = '';\n");
      out.write("                    div.onclick = turn;\n");
      out.write("                    panel.appendChild(div);\n");
      out.write("                    cards.push(div);\n");
      out.write("\n");
      out.write("\n");
      out.write("                }\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("            }\n");
      out.write("\n");
      out.write("// シャッフル用関数\n");
      out.write("            function shuffle(arr) {\n");
      out.write("                var n = arr.length;\n");
      out.write("                var temp, i;\n");
      out.write("\n");
      out.write("                while (n) {\n");
      out.write("                    i = Math.floor(Math.random() * n--);\n");
      out.write("                    temp = arr[n];\n");
      out.write("                    arr[n] = arr[i];\n");
      out.write("                    arr[i] = temp;\n");
      out.write("                }\n");
      out.write("                return arr;\n");
      out.write("            }\n");
      out.write("            var txt = \"Player\" + i + \"の番です\";\n");
      out.write("\n");
      out.write("//htmlのテキスト変更する関数\n");
      out.write("            function ChangeTxt1(txt) {\n");
      out.write("                document.getElementById(\"text\").innerHTML = txt;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            function ChangeTxt2(txt) {\n");
      out.write("                document.getElementById(\"text2\").innerHTML = txt;\n");
      out.write("            }\n");
      out.write("            function ChangeTxt3(txt) {\n");
      out.write("                document.getElementById(\"text3\").innerHTML = txt;\n");
      out.write("            }\n");
      out.write("            function ChangeTxt4(txt) {\n");
      out.write("                document.getElementById(\"text4\").innerHTML = txt;\n");
      out.write("            }\n");
      out.write("            function ChangeTxt5(txt) {\n");
      out.write("                document.getElementById(\"text5\").innerHTML = txt;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            var i = 1;//プレイヤ番号\n");
      out.write("            var q = 99;//\n");
      out.write("            function AI() {//コンピュータの動作\n");
      out.write("                console.log(\"call\");\n");
      out.write("                if (countUnit == 25 && flgFirst == false) {\n");
      out.write("                    var a = document.getElementById(0);\n");
      out.write("                    a.click();\n");
      out.write("                } else {\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("                    while (true) {\n");
      out.write("                        var rand = Math.floor(Math.random() * 51);\n");
      out.write("                        if (qq[rand] != 999 && (q != qq[rand])) {                         \n");
      out.write("                            var a = document.getElementById(rand + 1);\n");
      out.write("                            a.click();\n");
      out.write("                            q = rand + 1;\n");
      out.write("                            break;\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("\n");
      out.write("\n");
      out.write("            if (i == ");
      out.print(j);
      out.write(") {//コンピュータの処理\n");
      out.write("                setTimeout(function () {\n");
      out.write("\n");
      out.write("                    var p = document.getElementById('panel');\n");
      out.write("                    p.style.pointerEvents = 'none';\n");
      out.write("                    AI();\n");
      out.write("                }, 1000);\n");
      out.write("            }\n");
      out.write("            ;\n");
      out.write("\n");
      out.write("// クリック時の処理\n");
      out.write("            function turn(e) {\n");
      out.write("                var div = e.target;\n");
      out.write("\n");
      out.write("\n");
      out.write("                // カードのタイマー処理が動作中は return\n");
      out.write("                if (backTimer)\n");
      out.write("                    return;\n");
      out.write("\n");
      out.write("                // 裏向きのカードをクリックした場合は数字を表示する\n");
      out.write("                if (div.innerHTML == '') {\n");
      out.write("                    div.className = 'card';\n");
      out.write("                    div.innerHTML = \"<image src='img/\" + div.number + \".png' width='90' height='135'>\";\n");
      out.write("                } else {\n");
      out.write("                    // 数字が表示されているカードは return\n");
      out.write("                    return;\n");
      out.write("                }\n");
      out.write("\n");
      out.write("                // 1枚目の処理\n");
      out.write("                if (flgFirst) {\n");
      out.write("                    // cardFirst は2枚目の処理のときに使う\n");
      out.write("                    cardFirst = div;\n");
      out.write("                    cardFirst.className = 'card open';\n");
      out.write("                    // フラグ変更\n");
      out.write("                    flgFirst = false;\n");
      out.write("\n");
      out.write("\n");
      out.write("                    // 2枚目の処理\n");
      out.write("                } else {\n");
      out.write("\n");
      out.write("                    // 数字が1枚目と一致する場合\n");
      out.write("                    if (cardFirst.number % 13 == div.number % 13) {\n");
      out.write("\n");
      out.write("                        qq[cardFirst.id - 1] = 999;\n");
      out.write("                        qq[div.id - 1] = 999;\n");
      out.write("                        countUnit++;\n");
      out.write("                        count[i - 1]++;\n");
      out.write("                        flgPlayer = true;\n");
      out.write("                        // 見えない状態にする\n");
      out.write("                        backTimer = setTimeout(function () {\n");
      out.write("                            div.className = 'card finish';\n");
      out.write("                            cardFirst.className = 'card finish';\n");
      out.write("                            backTimer = NaN;\n");
      out.write("\n");
      out.write("                            ChangeTxt2(\"ペアの数：\" + count[0]);\n");
      out.write("                            ChangeTxt3(\"ペアの数：\" + count[1]);\n");
      out.write("                            ChangeTxt4(\"ペアの数：\" + count[2]);\n");
      out.write("                            ChangeTxt5(\"ペアの数：\" + count[3]);\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("                            console.log(countUnit);\n");
      out.write("                            if (countUnit == 26) {\n");
      out.write("                                p = count[0] + \",\" + count[1] + \",\" + count[2] + \",\" + count[3];\n");
      out.write("                                location.href = 'Party_result.jsp?p=' + encodeURIComponent(p);\n");
      out.write("\n");
      out.write("                            }\n");
      out.write("                        }, 500)\n");
      out.write("\n");
      out.write("\n");
      out.write("                        // 一致しない場合\n");
      out.write("                    } else {\n");
      out.write("                        flgPlayer = false;\n");
      out.write("                        // カードを裏側に戻す\n");
      out.write("                        backTimer = setTimeout(function () {\n");
      out.write("                            div.className = 'card back';\n");
      out.write("                            div.innerHTML = '';\n");
      out.write("                            cardFirst.className = 'card back';\n");
      out.write("                            cardFirst.innerHTML = '';\n");
      out.write("                            cardFirst = null;\n");
      out.write("                            backTimer = NaN;\n");
      out.write("                        }, 500);\n");
      out.write("                    }\n");
      out.write("\n");
      out.write("                    if (flgPlayer == false) {\n");
      out.write("                        if (i != 4) {\n");
      out.write("                            i++;\n");
      out.write("                            ChangeTxt1(\"Player\" + i + \"の番です\");\n");
      out.write("                            var p = document.getElementById('panel');\n");
      out.write("                            p.style.pointerEvents = 'auto';\n");
      out.write("\n");
      out.write("\n");
      out.write("                        } else {\n");
      out.write("                            i = 1;\n");
      out.write("                            ChangeTxt1(\"Player\" + i + \"の番です\");\n");
      out.write("                        }\n");
      out.write("                    }\n");
      out.write("                    flgFirst = true;\n");
      out.write("                }\n");
      out.write("                if (");
      out.print(q1);
      out.write(") {\n");
      out.write("                    var p = document.getElementById('panel');\n");
      out.write("                    p.style.pointerEvents = 'none';\n");
      out.write("                    setTimeout(function () {\n");
      out.write("                        AI();\n");
      out.write("\n");
      out.write("                    }, 1000);\n");
      out.write("                }\n");
      out.write("            }\n");
      out.write("        </script>\n");
      out.write("\n");
      out.write("        <style>\n");
      out.write("            #panel {\n");
      out.write("                width: 1200px;\n");
      out.write("                height: 580px;\n");
      out.write("                overflow: hidden;\n");
      out.write("                pointer-events: auto;\n");
      out.write("            }\n");
      out.write("            h1 {\n");
      out.write("                color: #6594e0;/*文字色*/\n");
      out.write("                border-bottom: dashed 2px #6594e0;\n");
      out.write("                /*線の種類（点線）2px 線色*/\n");
      out.write("            }\n");
      out.write("\n");
      out.write("            .card {\n");
      out.write("                width: 90px;\n");
      out.write("                height: 135px;\n");
      out.write("                line-height: 135px;\n");
      out.write("                border: 1px solid silver;\n");
      out.write("                border-radius: 10px;\n");
      out.write("                text-align: center;\n");
      out.write("                font-size: 26px;\n");
      out.write("                font-weight: bold;\n");
      out.write("                box-shadow: gray 2px 2px;\n");
      out.write("                background: white;\n");
      out.write("                float: left;\n");
      out.write("                cursor: pointer;\n");
      out.write("            }\n");
      out.write("            .open{\n");
      out.write("                pointer-events: none;\n");
      out.write("\n");
      out.write("            }\n");
      out.write("            /* 裏の状態 */\n");
      out.write("            .back {\n");
      out.write("                background-image: url('img/card.png');\n");
      out.write("                background-size: 90px 135px;\n");
      out.write("            }\n");
      out.write("            /* 終了時 */\n");
      out.write("            .finish {\n");
      out.write("                opacity: 0;\n");
      out.write("                cursor: default;\n");
      out.write("                pointer-events : none;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("\n");
      out.write("            .box {\n");
      out.write("                padding: 0.5em 1em;\n");
      out.write("                margin: 2em 0;\n");
      out.write("                border: double 5px #4ec4d3;\n");
      out.write("            }\n");
      out.write("            .box p {\n");
      out.write("                margin: 0; \n");
      out.write("                padding: 0;\n");
      out.write("            }\n");
      out.write("            h2{\n");
      out.write("                color: #FF8C00;\n");
      out.write("                background: -webkit-linear-gradient(0deg, #40E0D0, #FF8C00, #FF0080);\n");
      out.write("                -webkit-background-clip: text;\n");
      out.write("                -webkit-text-fill-color: transparent;\n");
      out.write("            }\n");
      out.write("            h1 {\n");
      out.write("                color: #6594e0;/*文字色*/\n");
      out.write("                border-bottom: dashed 2px #6594e0;\n");
      out.write("                /*線の種類（点線）2px 線色*/\n");
      out.write("            }\n");
      out.write("            p{\n");
      out.write("                color: #6594e0;\n");
      out.write("                font-size: 26px;\n");
      out.write("            }\n");
      out.write("\n");
      out.write("        </style>\n");
      out.write("    </head>\n");
      out.write("\n");
      out.write("    <body>\n");
      out.write("    <center>\n");
      out.write("        <h1>神経衰弱 パーティモード</h1>\n");
      out.write("        <h2 id=\"text\">Player1の番です</h2>\n");
      out.write("\n");
      out.write("\n");
      out.write("        <div id=\"panel\"></div></center>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("    <div class=\"box\" style=\" position: absolute; \n");
      out.write("         top: 700px; left: 350px; width: 250px;height: 150px;\">\n");
      out.write("        <center><h1>player1</h1></center>\n");
      out.write("        <p id=\"text2\">ペアの数：0</p>     \n");
      out.write("    </div>\n");
      out.write("    <div class=\"box\" style=\" position: absolute; \n");
      out.write("         top: 700px; left: 650px; width: 250px;height: 150px;\">\n");
      out.write("        <center><h1>player2</h1></center>\n");
      out.write("        <p id=\"text3\">ペアの数：0</p>     \n");
      out.write("    </div>\n");
      out.write("    <div class=\"box\" style=\" position: absolute; \n");
      out.write("         top: 700px; left: 950px; width: 250px;height: 150px;\">\n");
      out.write("        <center><h1>player3</h1></center>\n");
      out.write("        <p id=\"text4\">ペアの数：0</p>     \n");
      out.write("    </div>\n");
      out.write("    <div class=\"box\" style=\" position: absolute; \n");
      out.write("         top: 700px; left: 1250px; width: 250px;height: 150px;\">\n");
      out.write("        <center><h1>player4</h1></center>\n");
      out.write("        <p id=\"text5\">ペアの数：0</p>     \n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (Throwable t) {
      if (!(t instanceof SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          out.clearBuffer();
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
